"""
T·∫°o ph·∫£n h·ªìi ƒë·ªông cho AI Fitness Tracker d·ª±a tr√™n ƒëi·ªÉm form v√† b√†i t·∫≠p.
"""

import random
import time

# ========================================
# üß† AI Coach Personality (Preset messages)
# ========================================
FEEDBACK_SETS = {
    "positive": {
        "squat": [
            "R·∫•t t·ªët! Form squat ƒëang c·ª±c k·ª≥ ·ªïn ƒë·ªãnh!",
            "Tuy·ªát v·ªùi! Gi·ªØ l∆∞ng v√† nh·ªãp h·∫° r·∫•t chu·∫©n!",
            "Form squat chu·∫©n kh√¥ng c·∫ßn ch·ªânh!",
        ],
        "pushup": [
            "Xu·∫•t s·∫Øc! ƒê·∫©y tay ƒë·ªÅu v√† ch·∫Øc ch·∫Øn!",
            "R·∫•t t·ªët ‚Äî l·ª±c hai tay c√¢n b·∫±ng ho√†n h·∫£o!",
            "ƒê·∫©y m·∫°nh v√† ƒë·ªÅu, form chu·∫©n l·∫Øm!",
        ],
        "plank": [
            "Gi·ªØ form plank r·∫•t ch·∫Øc! Core si·∫øt t·ªët!",
            "T∆∞ th·∫ø plank c·ªßa b·∫°n c·ª±c k·ª≥ ·ªïn ƒë·ªãnh!",
            "Tuy·ªát! Duy tr√¨ nh·ªãp th·ªü ƒë·ªÅu nh∆∞ v·∫≠y nh√©!",
        ],
        "situp": [
            "R·∫•t t·ªët! C·∫£m nh·∫≠n r√µ l·ª±c ·ªü c∆° b·ª•ng!",
            "T·ªët l·∫Øm! Sit-up nh·ªãp ƒë·ªÅu v√† chu·∫©n!",
            "Form sit-up r·∫•t t·ªët, ti·∫øp t·ª•c n√†o!",
        ],
    },
    "neutral": {
        "squat": [
            "·ªîn r·ªìi, nh∆∞ng h·∫° s√¢u h∆°n ch√∫t nh√©.",
            "Gi·ªØ l∆∞ng th·∫≥ng h∆°n m·ªôt ch√∫t n·ªØa.",
            "T·∫≠p trung v√†o vi·ªác ki·ªÉm so√°t h√¥ng khi l√™n.",
        ],
        "pushup": [
            "·ªîn, th·ª≠ h·∫° th·∫•p h∆°n ch√∫t ƒë·ªÉ hi·ªáu qu·∫£ h∆°n.",
            "Gi·ªØ h√¥ng cao h∆°n m·ªôt ch√∫t khi ƒë·∫©y.",
            "ƒê·ª´ng v·ªôi, c·∫£m nh·∫≠n chuy·ªÉn ƒë·ªông ƒë·ªÅu hai tay.",
        ],
        "plank": [
            "Gi·ªØ v·ªØng t∆∞ th·∫ø th√™m ch√∫t n·ªØa!",
            "C·ªë g·∫Øng si·∫øt c∆° core m·∫°nh h∆°n!",
            "Duy tr√¨ ƒë∆∞·ªùng th·∫≥ng t·ª´ vai t·ªõi g√≥t nh√©.",
        ],
        "situp": [
            "·ªîn, nh∆∞ng n√™n gi·ªØ nh·ªãp ƒë·ªÅu h∆°n.",
            "Th·ª≠ g·∫≠p ng∆∞·ªùi ch·∫≠m v√† c√≥ ki·ªÉm so√°t h∆°n.",
            "Gi·ªØ m·∫Øt nh√¨n l√™n ƒë·ªÉ b·∫£o v·ªá c·ªï nh√©.",
        ],
    },
    "negative": {
        "squat": [
            "Ch∆∞a ƒë·ªß s√¢u, c·ªë h·∫° th·∫•p h∆°n!",
            "Sai form r·ªìi, ch·∫≠m l·∫°i ƒë·ªÉ ki·ªÉm so√°t h√¥ng!",
            "H√¥ng ƒëang l·ªách, ch·ªânh l·∫°i t∆∞ th·∫ø nh√©!",
        ],
        "pushup": [
            "H√¥ng b·ªã x·ªá, si·∫øt core l·∫°i ngay!",
            "Ch∆∞a du·ªói h·∫øt tay, ƒë·∫©y m·∫°nh h∆°n!",
            "Form ch∆∞a ·ªïn, h√£y ch·∫≠m l·∫°i v√† gi·ªØ nh·ªãp ƒë·ªÅu.",
        ],
        "plank": [
            "H√¥ng ƒëang x·ªá xu·ªëng, n√¢ng l√™n ch√∫t!",
            "L∆∞ng cong r·ªìi, si·∫øt b·ª•ng v√† ch·ªânh th·∫≥ng l·∫°i!",
            "Vai h∆°i cao, gi·ªØ th·∫≥ng ng∆∞·ªùi n√†o!",
        ],
        "situp": [
            "Ch∆∞a ƒë·ªß g·∫≠p ng∆∞·ªùi, c·ªë th√™m ch√∫t n·ªØa!",
            "Sai form, c·ªï ƒëang c√∫i qu√° s√¢u!",
            "G·∫≠p nhanh qu√°, h√£y ki·ªÉm so√°t nh·ªãp ch·∫≠m l·∫°i!",
        ],
    },
}

# ========================================
# üó£Ô∏è Main Function: AI Feedback Generator
# ========================================
def ai_feedback_generator(exercise, score, issues=None):
    """
    Sinh ph·∫£n h·ªìi AI t·ª± nhi√™n d·ª±a tr√™n ƒëi·ªÉm v√† b√†i t·∫≠p.
    Args:
        exercise (str): t√™n b√†i t·∫≠p ("squat", "pushup", "plank", "lunge", "situp")
        score (float): ƒëi·ªÉm form (0‚Äì100)
        issues (list[str]): danh s√°ch v·∫•n ƒë·ªÅ ph√°t hi·ªán
    Returns:
        tuple[str, str]: (feedback, tone)
    """
    if issues is None:
        issues = []

    # X√°c ƒë·ªãnh tone ph·∫£n h·ªìi
    if score > 90:
        tone = "positive"
    elif score > 70:
        tone = "neutral"
    else:
        tone = "negative"

    base = random.choice(FEEDBACK_SETS[tone].get(exercise, ["T·ªët l·∫Øm!"]))
    joined_issues = " ".join(issues)
    feedback = f"{base} {joined_issues}".strip()

    return feedback, tone


# ========================================
# üß≠ Smart Feedback Manager
# ========================================
class AIFeedbackManager:
    """
    Qu·∫£n l√Ω ph·∫£n h·ªìi AI v·ªõi th·ªùi gian cooldown ƒë·ªÉ tr√°nh spam.
    ƒê·ªìng b·ªô t·ªët v·ªõi h·ªá th·ªëng Text-to-Speech ho·∫∑c hi·ªÉn th·ªã overlay.
    """
    def __init__(self, cooldown=2.0):
        self.last_feedback = "B·∫Øt ƒë·∫ßu b√†i t·∫≠p n√†o!"
        self.last_time = 0
        self.last_tone = "neutral"
        self.cooldown = cooldown

    def get_feedback(self, exercise, score, issues=None):
        now = time.time()
        if now - self.last_time < self.cooldown:
            return self.last_feedback, self.last_tone

        feedback, tone = ai_feedback_generator(exercise, score, issues)
        self.last_feedback = feedback
        self.last_tone = tone
        self.last_time = now
        return feedback, tone
